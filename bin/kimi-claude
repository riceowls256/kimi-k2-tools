#!/bin/bash

# Kimi-Claude: Claude Code wrapper for Kimi K2 API
# Usage: kimi-claude [claude-options]

set -euo pipefail

# Configuration
KIMI_CONFIG_DIR="${KIMI_CONFIG_DIR:-$HOME/.kimi-claude}"
USAGE_LOG="${KIMI_CONFIG_DIR}/usage.log"
DEFAULT_API_KEY_FILE="${KIMI_CONFIG_DIR}/api_key"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper functions
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# Load .env file if it exists (project-specific first, then global)
load_env_file() {
    local env_file="$1"
    if [[ -f "$env_file" ]]; then
        log_info "Loading environment from $env_file"
        # Source the .env file while avoiding command substitution issues
        set -a  # automatically export all variables
        source "$env_file"
        set +a
        return 0
    fi
    return 1
}

# Create config directory if it doesn't exist
mkdir -p "$KIMI_CONFIG_DIR"

# Try to load .env files in order of priority
if ! load_env_file ".env"; then
    if ! load_env_file "$KIMI_CONFIG_DIR/.env"; then
        load_env_file "$(dirname "${BASH_SOURCE[0]}")/../.env" >/dev/null 2>&1 || true
    fi
fi

# Check for API key
if [[ -z "${ANTHROPIC_AUTH_TOKEN:-}" ]]; then
    if [[ -f "$DEFAULT_API_KEY_FILE" ]]; then
        export ANTHROPIC_AUTH_TOKEN=$(cat "$DEFAULT_API_KEY_FILE")
        log_info "Using API key from $DEFAULT_API_KEY_FILE"
    else
        log_error "No API key found. Set ANTHROPIC_AUTH_TOKEN environment variable or create $DEFAULT_API_KEY_FILE"
        echo "To set up your API key:"
        echo "  1. Get your key from https://platform.moonshot.ai/"
        echo "  2. Run: echo 'YOUR_API_KEY' > $DEFAULT_API_KEY_FILE"
        echo "  3. Or export ANTHROPIC_AUTH_TOKEN='YOUR_API_KEY'"
        exit 1
    fi
fi

# Set Kimi K2 API endpoint
export ANTHROPIC_BASE_URL="https://api.moonshot.ai/anthropic/"

# Log usage for monitoring
echo "$(date -Iseconds) START kimi-claude $*" >> "$USAGE_LOG"

# Enable debug logging if requested
if [[ "${KIMI_DEBUG:-false}" == "true" ]]; then
    export ANTHROPIC_LOG=debug
    log_info "Debug logging enabled"
fi

# Show configuration info
if [[ "${1:-}" == "--info" ]]; then
    echo "Kimi-Claude Configuration:"
    echo "  API Endpoint: $ANTHROPIC_BASE_URL"
    echo "  Config Dir: $KIMI_CONFIG_DIR"
    echo "  Usage Log: $USAGE_LOG"
    echo "  API Key: ${ANTHROPIC_AUTH_TOKEN:0:10}..."
    echo "  Debug Mode: ${KIMI_DEBUG:-false}"
    exit 0
fi

# Health check
if [[ "${1:-}" == "--check" ]]; then
    log_info "Performing health check..."
    if command -v claude >/dev/null 2>&1; then
        log_success "Claude Code found"
        
        # Test API connectivity (simple check)
        if curl -s --max-time 5 "https://api.moonshot.ai" >/dev/null; then
            log_success "Moonshot API is reachable"
        else
            log_warn "Could not reach Moonshot API"
        fi
    else
        log_error "Claude Code not found in PATH"
        exit 1
    fi
    exit 0
fi

# Log start time for cost tracking
echo "$(date -Iseconds) EXEC claude $*" >> "$USAGE_LOG"

# Execute Claude Code with Kimi K2 configuration
exec claude "$@"